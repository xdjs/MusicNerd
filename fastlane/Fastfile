default_platform(:ios)

platform :ios do
  desc "Build the app for testing"
  lane :build do
    xcodebuild(
      project: "TrackNerd.xcodeproj",
      scheme: "TrackNerd",
      destination: "platform=iOS Simulator,name=iPhone SE (3rd generation),OS=18.2",
      build: true
    )
  end

  desc "Run unit tests"
  lane :test do
    # Ensure simulator is booted (ignore if already booted)
    sh("xcrun simctl boot 'iPhone SE (3rd generation)' || true")
    sh("xcrun simctl spawn booted launchctl setenv SIMULATOR_SLOW_MOTION_TIMEOUT 0")
    
    run_tests(
      project: "TrackNerd.xcodeproj",
      scheme: "TrackNerd",
      destination: "platform=iOS Simulator,name=iPhone SE (3rd generation),OS=18.2",
      testplan: "UnitTestPlan",
      output_style: "raw",
      result_bundle: true,
      result_bundle_path: "testResults/#{Time.now.strftime('%Y%m%d_%H%M%S')}/UnitTests.xcresult"
    )
  end

  desc "Run UI tests"
  lane :ui_test do
    # Ensure simulator is booted (ignore if already booted)
    sh("xcrun simctl boot 'iPhone SE (3rd generation)' || true")
    sh("xcrun simctl spawn booted launchctl setenv SIMULATOR_SLOW_MOTION_TIMEOUT 0")
    
    run_tests(
      project: "TrackNerd.xcodeproj",
      scheme: "TrackNerd",
      destination: "platform=iOS Simulator,name=iPhone SE (3rd generation),OS=18.2",
      testplan: "UITestPlan",
      output_style: "raw",
      result_bundle: true,
      result_bundle_path: "testResults/#{Time.now.strftime('%Y%m%d_%H%M%S')}/UITests.xcresult"
    )
  end

  desc "Run dev tests"
  lane :dev_test do
    # Ensure simulator is booted (ignore if already booted)
    sh("xcrun simctl boot 'iPhone SE (3rd generation)' || true")
    sh("xcrun simctl spawn booted launchctl setenv SIMULATOR_SLOW_MOTION_TIMEOUT 0")
    
    run_tests(
      project: "TrackNerd.xcodeproj",
      scheme: "TrackNerd",
      destination: "platform=iOS Simulator,name=iPhone SE (3rd generation),OS=18.2",
      testplan: "DevTestPlan",
      output_style: "raw",
      result_bundle: true,
      result_bundle_path: "testResults/#{Time.now.strftime('%Y%m%d_%H%M%S')}/UITests.xcresult"
    )
  end

  desc "Run all tests (unit and UI)"
  lane :test_all do
    test
    ui_test
  end

  desc "Build and test"
  lane :ci do
    build
    test
  end

  desc "Clean derived data and build folders"
  lane :clean do
    clear_derived_data
    sh("rm -rf testResults/*")
  end
end
